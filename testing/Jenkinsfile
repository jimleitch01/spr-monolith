pipeline {
    agent none
    stages {
        stage('Tests') {
            
            parallel {
                stage('JaCoCo') {
                    agent {
                        label "maven"
                    }
                    steps {
                        // checkout scm
                        sh "#mvn -B -s /usr/share/maven/ref/repository/settings-docker.xml jacoco:report-aggregate"
                        sh "echo JaCoCo"
                    }
                    // post {
                    //     always {
                    //         junit "**/TEST-*.xml"
                    //     }
                    // }
                }
                stage('Integration') {
                    agent {
                        label "maven"
                    }
                    steps {
                        // checkout scm
                        sh "mvn -B -s /usr/share/maven/ref/repository/settings-docker.xml test"
                    }
                    // post {
                    //     always {
                    //         junit "**/TEST-*.xml"
                    //     }
                    // }
                }
                stage('Model') {
                    agent {
                        label "maven"
                    }
                    steps {
                        // checkout scm
                        sh "mvn -B -s /usr/share/maven/ref/repository/settings-docker.xml test"
                    }
                    // post {
                    //     always {
                    //         junit "**/TEST-*.xml"
                    //     }
                    // }
                }
                stage('Owner') {
                    agent {
                        label "maven"
                    }
                    steps {
                        // checkout scm
                        sh "mvn -B -s /usr/share/maven/ref/repository/settings-docker.xml test " 
                    }
                    // post {
                    //     always {
                    //         junit "**/TEST-*.xml"
                    //     }
                    // }
                }
                stage('Service') {
                    agent {
                        label "maven"
                    }
                    steps {
                        // checkout scm
                        sh "mvn -B -s /usr/share/maven/ref/repository/settings-docker.xml test  "
                    }
                    // post {
                    //     always {
                    //         junit "**/TEST-*.xml"
                    //     }
                    // }
                }
                stage('System') {
                    agent {
                        label "maven"
                    }
                    steps {
                        // checkout scm
                        sh "mvn -B -s /usr/share/maven/ref/repository/settings-docker.xml test"
                    }
                    // post {
                    //     always {
                    //         junit "**/TEST-*.xml"
                    //     }
                    // }
                }
                stage('Vet') {
                    agent {
                        label "maven"
                    }
                    steps {
                        // checkout scm
                        sh "mvn -B -s /usr/share/maven/ref/repository/settings-docker.xml test"
                    }
                    // post {
                    //     always {
                    //         junit "**/TEST-*.xml"
                    //     }
                    // }
                }
                stage('jMeter') {
                    agent {
                        label "maven"
                    }
                    steps {
                        // checkout scm
                        sh "echo jMeter should be here"
                    }
                    // post {
                    //     always {
                    //         junit "**/TEST-*.xml"
                    //     }
                    // }
                }

                stage('updateJIRA') {
                    jiraComment(issueKey: "PE-52", body: "Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) built. Please go to ${env.BUILD_URL}.")

                }


            }



        }
    }
}




